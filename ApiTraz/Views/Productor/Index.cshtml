@{
    ViewBag.Title = "Listado Productores";
}
<div class="span12" id="contentparameter">
    <span data-bind="StringtoHtml:SearchingBy"></span><span data-bind="StringtoHtml:searchingResult">
    </span><span id="errortext" style="font-size: 18px; background: Red; color: white">
    </span>
    <table class="table table-striped" id="tableproductores">
        <caption>
            <b>Productores</b>
        </caption>
        <thead>
            <tr id="TitulosCol">
                <th>
                    Renapa
                </th>
                <th>
                    Apellido y Nombre
                </th>
                <th>
                    DNI
                </th>
                <th>
                    Departamento Localidad
                </th>
                <th>
                Fecha de Inscripción
                </th>
            </tr>
            <tr id="SeccionSearch">
                <th id="col_ren">
                    <div class="input-prepend input-append">
                        <span class="add-on">
                            <img src="~/Images/orderedList1.png" class="img-rounded" alt="Logo Corrientes Miel">
                        </span>
                        <input class="input-medium" data-bind="value:searchByRenapa, update:onsubmit" placeholder="Buscar Por Renapa..." />
                    </div>
                </th>
                <th id="col_Nombre_col_Apellido">
                    <div class="input-prepend input-append">
                        <span class="add-on">
                            <img src="~/Images/orderedList1.png" class="img-rounded" alt="Logo Corrientes Miel">
                        </span>
                        <input class="input-xlarge" data-bind="value:searchByNomApe,update:onsubmit" placeholder="Buscar Apellido,Nombre..." />
                        <label>
                            Ingrese <b>*, + Nombre </b>para buscar solo por nombre</label>
                    </div>
                </th>
                <td id="col_dni">
                    <div class="input-prepend input-append">
                        <span class="add-on">
                            <img src="~/Images/orderedList1.png" class="img-rounded" alt="Logo Corrientes Miel">
                        </span>
                        <input class="input-xlarge"  placeholder="Buscar DNI..." data-bind="value:searchByDNI,update:onsubmit" />
                    </div>
                </td>
                <th id="col_Dto_col_Loc">
                    <select id="cbo_dto" data-bind="
        value: selectedDto,
        options:        Departamentos,
        optionsText:    'Dpto',
        optionsValue:   'CodDpto',
        visibleFade: HasDto,
        update:onsubmit,
        optionsCaption: '-- Seleccione Departamento --'
        ">
                    </select>
                    <select data-bind="
        value: searchByLoc,
        options:  Localidades,
         optionsText:   'Loc1',
        optionsValue:   'CodLoc',
        visibleFade:HasLoc,
        update:onsubmit,
        optionsCaption: '-- Seleccione Localidad --'">
                    </select>
                </th>
            </tr>
        </thead>
        <tbody data-bind="foreach:{data:Productores}">
            <tr>
                <td>
                    <span data-bind="text: ren"></span>
                </td>
                <td>
                    <span data-bind="text:  ape"></span>, <span data-bind="text:nom"></span>
                </td>
                <td>
                    <span data-bind="text: dni"></span>
                </td>
                <td>
                    <span data-bind="text:Model.getLocDto($data)"></span>
                </td>
                <td>
               
                    <span data-bind="dateString:fechains,dateFormat:'LL'" ></span>
                </td>
            </tr>
        </tbody>
    </table>

</div>



@section scripts
    {
 @*   @Scripts.Render("~/bundles/knockout")*@
    <script src="~/Scripts/knockout-2.2.1.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/moment.js"></script>
    
    <script type="text/javascript" >

        //===================================================
        //1)Propiedades de acceso Publico
        //===================================================
        var baseUrl = "@Request.Url.GetLeftPart(UriPartial.Authority)";
        var serviceGeo = baseUrl + "/api/Departamentos/GetDptosList"; ;
        var serviceProductores = "/api/productores/GetProductoresList";
        var pathUri;
        
        //===================================================
        //2)Modelo de Datos
        //===================================================
       
        var Model = {

            //Modelos de Datos
            Productores: ko.observableArray([]),
            Departamentos: ko.observableArray([]),
            Localidades: ko.observableArray([]),

            //Variables de Busqueda
            HasSearching: ko.observable(false),
            searchingMensaje: ko.observable(''),
            selectedDto: ko.observable(''),
            searchByLoc: ko.observable(''),
            searchByRenapa: ko.observable(''),
            searchByNomApe: ko.observable(''),
            searchByDNI: ko.observable(''),
            SearchingBy: ko.observable(''),

            //Variable de Query OData
            searchingResult: ko.observable(''),
            searchQuery: ko.observable(''),


            getLocDto: function (Productor) {
                var nLocDto = "---";

                // var codigo = Productor.CodLoc();
                if (!Productor.CodLoc) {
                    return nLocDto;
                }
                else {

                    ko.utils.arrayForEach(Model.Departamentos(), function (d) {

                        if (d.Loc) {

                            ko.utils.arrayFirst(d.Loc, function (l) {
                                if (l.CodLoc === Productor.CodLoc) {
                                    nLocDto = d.Dpto + "," + l.Loc1;

                                }
                            });
                        }
                        else {
                            nLocDto = "no encuentra";
                        }


                    });

                    return nLocDto;
                }


            } //*******getProductorGeo





        };

        //===================================================
        //3)Funciones Observables KO. de searching
        //===================================================

        //Criterios de Busquedas de Porductores
        //este metodo formara las query para pasarlas al service Api Productores
        Model.Search = ko.computed(function () {
            var filter = "";
            var query = "";
            var mensaje = "";
            //Buscando Por DNI
            filter = this.searchByDNI();

            if (filter) {

                if (!isNaN(filter)) {
                    query = "?$filter=dni eq " + filter;
                    mensaje = "Busqueda por DNI: <b>" + filter + "</b>";
                }







            }

            //Buscado Por Codigo Renapa
            filter = this.searchByRenapa();
            if (filter) {


                query = "?$filter=startswith(ren,'" + filter + "')";
                mensaje = "Busqueda por Codigo Renapa: <b>" + filter + "</b>";

            }

            //Buscado Por Nombre y Apellido
            filter = this.searchByNomApe();
            if (filter) {

                var filters = filter.split(",");
                if (filters.length === 1) {
                    query = "?$filter=startswith(ape,'" + filters[0].trim() + "') &$orderby=ape,nom";
                    mensaje = "Busqueda por Apellido: <b>" + filters[0] + "</b>";
                }
                else {
                    var x = filters[0];
                    if (x.slice(0, 1) === "*") {

                        query = "?$filter=startswith(nom,'" + filters[1] + "') &$orderby=ape,nom";
                        mensaje = "Busqueda por Nombre: <b>" + filters[1] + "</b>";
                    }
                    else {
                        query = "?$filter=startswith(ape,'" + filters[0] + "') and startswith(nom,'" + filters[1] + "') &$orderby=ape,nom ";
                        mensaje = "Busqueda por  Apellido y Nombre: <b>" + filters[0] + ", " + filters[1] + "</b> ";

                    }

                }

            }
            //Buscando Por Localidad
            filter = this.searchByLoc();

            if (filter) {

                if (!isNaN(filter)) {
                    query = "?$filter=CodLoc eq " + filter + "&$orderby=ape,nom ";
                    mensaje = "Busqueda por  <b> Localidad </b>";
                }


            }


            //Realizar llamada de carga a la api de productores
            if (query) {
                Model.SearchingBy(mensaje);
                BuscarProductores(query);
                //Blanquear todos los campos

                //TODO: Verificar validacion de filtro por codigo de localidad
                this.searchByDNI('');
                this.searchByRenapa('');
                this.searchByNomApe('');

                this.Localidades([]);
                this.searchByLoc('');
                this.selectedDto(0);
            }

        

        }, Model);


        //===================================================
        //4)Funciones Observables KO. de Geo
        //===================================================

        Model.HasDto = ko.computed(function () {
            if (this.Departamentos().length=== 0) {
                return false;
            }
            else {
                return true;
            }



        }, Model);


        Model.HasLoc = ko.computed(function () {

            this.Localidades([]);
            var resultado = false;
            var filtro=this.selectedDto();
            if (filtro) {

               ko.utils.arrayFirst(this.Departamentos(), function (item) {

                   if (filtro === item.CodDpto) {
                        var x=item.Loc;
                       if (x.length >0) {
                            resultado = true;
                            Model.Localidades(item.Loc);
                        }
                      

                    }
                });


            }


            return resultado;

        }, Model);

//        Model.getLocDto =function (data) {

//            
//            if (data) {
//                return this.CodLoc;
//            }
//            else {
//                return "nnnn";
//            }

//        }, Model);


        //===================================================
        //5)Funciones ko. Handler binding
        //===================================================
               
        ko.bindingHandlers.visibleFade = {
            init: function (element, valueAccessor) {
                var value = valueAccessor();
                $(element).toggle(value());
            },
            update: function (element, valueAccessor) {
                var value = valueAccessor();
                value() ? $(element).fadeIn("slow") : $(element).fadeOut("slow");
            }
        }


        ko.bindingHandlers.StringtoHtml = {
            update: function (element, valueAccessor) {
                $(element).html(ko.utils.unwrapObservable(valueAccessor()));
            }
        };

//        ko.bindingHandlers.dateString = {
//            update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
//                var value = valueAccessor();
//                allBindings = allBindingsAccessor();
//                var valueUnwrapped = ko.utils.unwrapObservable(value);
//                var pattern = allBindings.datePattern || 'MM/DD/YYYY';
//                $(element).text(moment(valueUnwrapped).format(pattern));
//            }
////        }
//        ko.bindingHandlers.dateString = {
//            update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
//                var value = valueAccessor(),
//            allBindings = allBindingsAccessor();
//                var valueUnwrapped = ko.utils.unwrapObservable(value);
//                var pattern = allBindings.datePattern || 'MM/dd/yyyy';
//                $(element).text(valueUnwrapped.toString(pattern));
//            }
//        }
        // can be something like yy-mm-dd
        ko.bindingHandlers.dateString = {
            init: function (element, valueAccessor, allBindingsAccessor, viewModel) {
                var value = valueAccessor();
                if (value != null) {
//                    var valueUnwrapped = ko.utils.unwrapObservable(value);
//                    var jsonDate = new Date(parseInt(valueUnwrapped.substr(6)));
////                    var jsonDate = new Date(parseInt(valueAccessor().substr(6)));
//                    element.innerHTML = jQuery.datepicker.formatDate(jsDateFormat, jsonDate);
//                    var f = jQuery.datepicker.formatDate(jsDateFormat, jsonDate);
//                    $(element).text(f);


                    allBindings = allBindingsAccessor();
                    var jsDateFormat = allBindings.dateFormat || 'DD/MM/YYYY';
                    //var valueUnwrapped = ko.utils.unwrapObservable(value);
                    var date = moment(value);
                    $(element).text(date.format(jsDateFormat));

                }
            },
            update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
                //                var value = valueAccessor();
                //                if (value != null) {
                //                    var jsonDate = new Date(parseInt(valueAccessor().substr(6)));
                //                    element.innerHTML = jQuery.datepicker.formatDate(jsDateFormat, jsonDate);
                //                }

            }
        }



        //===================================================
        //6)Aplicando Modelo a la View
        //===================================================

    ko.applyBindings( Model);













    //===================================================
    //7)LLamadas a las Api server
    //===================================================



        function BuscarProductores(query) {

             $.ajax({
                type: "GET",
                url: serviceProductores+query,
                data: "json",
                cache: false,
                contentType: "application/json; charset=UTF-8",
                success: function (data) {
                   Model.Productores(data);
                   Model.searchingResult("--Se encontraron <b>" + Model.Productores().length +" Poductores</b> que coinciden con el criterio de busqueda");

                },
                error: function (req, status, error) {

                    alert("Error!Occured");

                }

            });     //$.ajax

        }

    function LeerDepartamentos(pathUri) {

        var self = this;

        $.ajax({
            type: "GET",
            url: pathUri,
            data: "json",
            cache: false,
            contentType: "application/json; charset=UTF-8",
            success: function (data) {
              
                Model.Departamentos ( data);

            },
            error: function (req, status, error) {

                alert("Error!Occured");

            }

        });      //$.ajax

        }



        //===================================================
        //8)Incializacion de HTML
        //===================================================

        $(document).ready(function () {
            //*********************************
            //Funciones Inciales
            //*********************************
           
                 LeerDepartamentos(serviceGeo);


        });


    </script>
    }

    



